{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/eeo/personal/myNext/childrenDance/app/query/route.ts"],"sourcesContent":["\"use server\";\n\nimport { neon } from \"@neondatabase/serverless\";\n\nconst client: { sql: any } = { sql: null };\nif (!process.env.DATABASE_URL) {\n  throw new Error('DATABASE_URL is not defined');\n}\nclient.sql = neon(process.env.DATABASE_URL);\n\nasync function listInvoices() {\n\tconst data = await client.sql`\n    SELECT invoices.amount, customers.name\n    FROM invoices\n    JOIN customers ON invoices.customer_id = customers.id\n    WHERE invoices.amount = 666;\n  `;\n  console.log('dddd', data);\n\treturn data;\n}\n\nexport async function GET() {\n  try {\n    await client.sql`BEGIN`;\n    const res = await listInvoices();\n    console.log('res', res);\n  \treturn Response.json(res);\n  } catch (error) {\n    await client.sql`ROLLBACK`;\n  \treturn Response.json({ error }, { status: 500 });\n  }\n}\n// export async function GET() {\n//   try {\n//     await client.sql`BEGIN`;\n//     await seedUsers();\n//     await seedCustomers();\n//     await seedInvoices();\n//     await seedRevenue();\n//     await client.sql`COMMIT`;\n\n//     return Response.json({ message: 'Database seeded successfully' });\n//   } catch (error) {\n//     await client.sql`ROLLBACK`;\n//     return Response.json({ error }, { status: 500 });\n//   }\n// }"],"names":[],"mappings":";;;;;AAEA;;;;;AAEA,MAAM,SAAuB;IAAE,KAAK;AAAK;AACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,YAAY,EAAE;IAC7B,MAAM,IAAI,MAAM;AAClB;AACA,OAAO,GAAG,GAAG,CAAA,GAAA,kOAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY;AAE1C,eAAe;IACd,MAAM,OAAO,MAAM,OAAO,GAAG,CAAC;;;;;EAK7B,CAAC;IACD,QAAQ,GAAG,CAAC,QAAQ;IACrB,OAAO;AACR;AAEO,eAAe,uCAAC,GAAD;IACpB,IAAI;QACF,MAAM,OAAO,GAAG,CAAC,KAAK,CAAC;QACvB,MAAM,MAAM,MAAM;QAClB,QAAQ,GAAG,CAAC,OAAO;QACpB,OAAO,SAAS,IAAI,CAAC;IACtB,EAAE,OAAO,OAAO;QACd,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC;QAC3B,OAAO,SAAS,IAAI,CAAC;YAAE;QAAM,GAAG;YAAE,QAAQ;QAAI;IAC/C;AACF,EACA,gCAAgC;CAChC,UAAU;CACV,+BAA+B;CAC/B,yBAAyB;CACzB,6BAA6B;CAC7B,4BAA4B;CAC5B,2BAA2B;CAC3B,gCAAgC;CAEhC,yEAAyE;CACzE,sBAAsB;CACtB,kCAAkC;CAClC,wDAAwD;CACxD,MAAM;CACN,IAAI;;;IAzBkB;;AAAA,gXAAA"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}